services:
  db:
    container_name: postgres
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"

    networks:
      - main

    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    container_name: redis
    image: redis
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6380
    restart: always
    networks:
      - main
    ports:
      - "6380:6379"

  web:
    build: .
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    container_name: web
    volumes:
      - .:/code/
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    restart: always
    networks:
      - main

  #    environment:
#      - CELERY_BROKER=redis://redis:6379/0
#      - CELERY_BACKEND=redis://redis:6379/0
#    entrypoint: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
  worker:
    container_name: celery
    command: sh -c "celery -A accounts.tasks worker -l info"
    build: .
    volumes:
      - .:/code/
    depends_on:
      - web
      - db
      - redis
    restart: always
    environment:
      - C_FORCE_ROOT="true"
#      - CELERY_BROKER_URL=redis://redis:6380/0
#      - CELERY_RESULT_BACKEND=redis://redis:6380/0
#    environment:
#      REDIS_HOST: redis
#      REDIS_PORT: 6380
#      REDIS_DB: 0
#      CELERY_BROKER: redis://localhost:6380/0
#      CELERY_RESULT_BACKEND: redis://localhost:6380/0
#    environment:
#      - CELERY_BROKER=redis://redis:6380/0
#      - CELERY_BACKEND=redis://redis:6380/0
#    environment:
#       - REDIS_HOST=redis
#       - REDIS_PORT=6380

    networks:
      - main

#    entrypoint: |
#      sh -c "celery -A accounts.tasks worker --loglevel=info"

networks:
  main:

volumes:
  postgres_data: